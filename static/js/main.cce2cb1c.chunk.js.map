{"version":3,"sources":["components/section.js","components/contacts.js","components/form.js","App.js","reportWebVitals.js","index.js"],"names":["Section","title","children","Contacts","state","props","changeFilter","e","value","target","setState","filter","filterResults","contacts","item","name","includes","map","number","htmlFor","type","id","onChange","this","Component","INITIAL_STATE","Form","shortid","generate","addContact","preventDefault","contact","action","onSubmit","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2QACe,SAASA,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACrC,OACI,oCACI,6BACKD,IAEJC,K,IC4BEC,E,4MA9BXC,M,eACO,EAAKC,MAAMD,O,EAGlBE,aAAe,SAACC,GAAO,IACXC,EAAUD,EAAEE,OAAZD,MACR,EAAKE,SAAS,CAAEC,OAAQH,K,EAE5BI,cAAgB,SAACC,GACb,OAAOA,EAASF,QAAO,SAAAG,GAAI,OAAIA,EAAKC,KAAKC,SAAS,EAAKZ,MAAMO,WAASM,KAAI,SAAAH,GAAI,OAC1E,gCAAMA,EAAKC,KAAX,IAAkBD,EAAKI,c,uDAK3B,OACI,eAAClB,EAAD,CAASC,MAAM,WAAf,UAGI,uBAAOkB,QAAQ,OAAf,SACI,uBAAOC,KAAK,OAAOC,GAAG,OAAOC,SAAUC,KAAKjB,iBAI/CiB,KAAKX,cAAcW,KAAKnB,MAAMS,iB,GA1BxBW,aCAjBC,EAAgB,CAClBZ,SAAU,CACN,CAAEQ,GAAI,OAAQN,KAAM,gBAAiBG,OAAQ,aAC7C,CAAEG,GAAI,OAAQN,KAAM,iBAAkBG,OAAQ,aAC9C,CAAEG,GAAI,OAAQN,KAAM,gBAAiBG,OAAQ,aAC7C,CAAEG,GAAI,OAAQN,KAAM,iBAAkBG,OAAQ,cAElDP,OAAQ,GACRI,KAAM,GACNG,OAAQ,IAkDGQ,E,4MA/CXtB,M,eACOqB,G,EAGPP,OAASS,IAAQC,W,EAEjBC,WAAa,SAAAtB,GACTA,EAAEuB,iBADY,MAEWvB,EAAEE,OAAnBM,EAFM,EAENA,KAAMG,EAFA,EAEAA,OACRa,EAAU,CACZ,KAAQhB,EAAKP,MACb,OAAUU,EAAOV,MACjB,GAAMmB,IAAQC,YAElB,EAAKlB,SAAS,CACVK,KAAMA,EAAKP,MACXU,OAAQA,EAAOV,MACfK,SAAS,GAAD,mBAAM,EAAKT,MAAMS,UAAjB,CAA2BkB,O,uDAMvC,OACI,gCACI,uBAAMC,OAAO,GAAGC,SAAUV,KAAKM,WAA/B,UAEI,wBAAOV,QAAQ,OAAf,kBACS,uBACL,uBAAOC,KAAK,OAAOC,GAAG,YAE1B,uBACA,wBAAOF,QAAQ,SAAf,oBACW,uBACP,uBAAOC,KAAK,OAAOC,GAAG,cAE1B,uBAEA,wBAAQD,KAAK,SAAb,4BAEJ,cAAC,EAAD,CAAUhB,MAAOmB,KAAKnB,e,GAzCnBoB,aCKJU,E,4MAdb9B,MAAQ,CACNS,SAAU,GACVE,KAAM,I,uDAIN,OACE,cAAC,EAAD,CAAMX,MAAOmB,KAAKnB,Y,GARNoB,aCQHW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.cce2cb1c.chunk.js","sourcesContent":["\nexport default function Section({ title, children }) {\n    return (\n        <section>\n            <h2>\n                {title}\n            </h2>\n            {children}\n        </section>\n    )\n}","import React, { Component, Fragment } from 'react'\nimport Section from './section'\n\nclass Contacts extends Component {\n\n    state = {\n        ...this.props.state\n    }\n\n    changeFilter = (e) => {\n        const { value } = e.target\n        this.setState({ filter: value })\n    }\n    filterResults = (contacts) => {\n        return contacts.filter(item => item.name.includes(this.state.filter)).map(item =>\n            <div>{item.name} {item.number}</div>)\n\n    }\n\n    render() {\n        return (\n            <Section title=\"Contacts\">\n\n\n                <label htmlFor=\"name\">\n                    <input type=\"text\" id=\"name\" onChange={this.changeFilter} />\n                </label>\n\n\n                {this.filterResults(this.state.contacts)}\n            </Section>\n        )\n    }\n}\n\nexport default Contacts\n","import React, { Component } from 'react'\nimport shortid from 'shortid'\nimport Contacts from './contacts'\nconst INITIAL_STATE = {\n    contacts: [\n        { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n        { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n        { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n        { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n    name: '',\n    number: ''\n}\nclass Form extends Component {\n    state = {\n        ...INITIAL_STATE\n    }\n\n    number = shortid.generate()\n\n    addContact = e => {\n        e.preventDefault()\n        const { name, number } = e.target\n        const contact = {\n            \"name\": name.value,\n            \"number\": number.value,\n            \"id\": shortid.generate()\n        }\n        this.setState({\n            name: name.value,\n            number: number.value,\n            contacts: [...this.state.contacts, contact]\n        })\n    }\n\n    render() {\n\n        return (\n            <div>\n                <form action=\"\" onSubmit={this.addContact}>\n\n                    <label htmlFor=\"name\">\n                        Name <br />\n                        <input type=\"text\" id=\"name\" />\n                    </label>\n                    <br />\n                    <label htmlFor=\"number\">\n                        Number <br />\n                        <input type=\"text\" id=\"number\" />\n                    </label>\n                    <br />\n\n                    <button type=\"submit\">Add contact</button>\n                </form>\n                <Contacts state={this.state} />\n            </div>\n\n        )\n    }\n}\n\nexport default Form\n","import './App.css';\nimport { Component } from 'react'\nimport Form from './components/form.js'\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    name: ''\n  }\n\n  render() {\n    return (\n      <Form state={this.state} />\n\n    );\n  }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}